name: bartoo_monorepo

packages:
  - apps/**
  - packages/**

command:
  # version:
  #   # Generate commit links in package changelogs.
  #   linkToCommits: true
  #   # Only allow versioning to happen on main branch.
  #   branch: main
  #   # Additionally build a changelog at the root of the workspace.
  #   workspaceChangelog: true

  bootstrap:
    # It seems so that running "pub get" in parallel has some issues (like
    # https://github.com/dart-lang/pub/issues/3404). Disabling this feature
    # makes the bootstrap process more reliable.
    runPubGetInParallel: false

scripts:
  # Analyze all packages
  analyze:
    run: melos exec dart analyze . --fatal-infos
    description: |
      Run `dart analyze` in all packages.
       - Note: you can also rely on your IDEs Dart Analysis / Issues window.

  # Check code formatting across all packages
  format:
    run: melos exec dart format --set-exit-if-changed .
    description: |
      Run `dart format` checks for all packages.

  # Fix code formatting across all packages
  format:fix:
    run: melos exec dart format .
    description: |
      Run `dart format` for all packages.

  # Run tests for all packages
  test:
    run: melos exec --fail-fast -- flutter test
    description: Run `flutter test` for all packages.

  # Clean all packages
  clean:
    run: melos exec flutter clean
    description: Run `flutter clean` for all packages.

  # Get dependencies for all packages
  get:
    run: melos exec flutter pub get
    description: Run `flutter pub get` for all packages.

  # Upgrade dependencies for all packages
  upgrade:
    run: melos exec flutter pub upgrade
    description: Run `flutter pub upgrade` for all packages.

  # Build the main app
  build:
    run: flutter build apk
    exec:
      concurrency: 1
    packageFilters:
      dirExists:
        - android
    description: Build the Flutter app.

  # Run the main app
  run:
    run: flutter run
    exec:
      concurrency: 1
    packageFilters:
      dirExists:
        - android
    description: Run the Flutter app.

  # Run the web version of the app
  run:web:
    run: flutter run -d chrome --web-renderer canvaskit --web-port=50000
    exec:
      concurrency: 1
    packageFilters:
      dirExists:
        - web
    description: Run the Flutter app on web.

  # Lint all packages
  lint:
    run: melos exec dart run flutter_lints
    description: Run linting for all packages.

  # Check for outdated dependencies
  outdated:
    run: melos exec flutter pub outdated
    description: Check for outdated dependencies in all packages.

  # Generate code (for json_serializable, etc.)
  build_runner:
    run: melos exec --fail-fast -- flutter packages pub run build_runner build --delete-conflicting-outputs
    packageFilters:
      dependsOn: "build_runner"
    description: Run build_runner for packages that depend on it.

  # Watch for changes and rebuild (for json_serializable, etc.)
  build_runner:watch:
    run: melos exec --fail-fast -- flutter packages pub run build_runner watch --delete-conflicting-outputs
    packageFilters:
      dependsOn: "build_runner"
    description: Watch and run build_runner for packages that depend on it.
